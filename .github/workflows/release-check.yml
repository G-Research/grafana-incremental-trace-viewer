name: Release Check

on:
  push:
    branches:
      - main

permissions:
  contents: write # needed to create tags/releases

jobs:
  release-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # important, we need full history to tag properly

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run release detect
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Being explicit here as we want to avoid any dry run
          CI: true
        run: |
          bun run ./scripts/release-detect.js
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 2 ]; then
            echo "No new release needed - stopping workflow"
            echo "RELEASE_NEEDED=false" >> $GITHUB_ENV
            exit 0
          elif [ $EXIT_CODE -eq 0 ]; then
            echo "New release needed"
            echo "RELEASE_NEEDED=true" >> $GITHUB_ENV
            exit 0
          else
            echo "Error occurred during release detection"
            exit $EXIT_CODE
          fi

      - name: Get package version
        if: env.RELEASE_NEEDED == 'true'
        id: get-version
        run: |
          VERSION=$(bunx changelog --latest-release)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"

      - name: Trigger release workflow
        if: env.RELEASE_NEEDED == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          echo "Triggering release workflow for version: $VERSION"
          gh workflow run release.yml --ref main -f version="$VERSION"
          echo "Release workflow triggered successfully"
