openapi: 3.0.0
info:
  title: OpenSearch Traces API
  version: 0.1.0
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /api/search:
    post:
      summary: Search for traces
      operationId: search
      parameters:
        - name: q
          schema:
            type: string
          in: query
          required: true
        - name: start
          schema:
            type: integer # unix epoch seconds
          in: query
          required: true
        - name: end
          schema:
            type: integer # unix epoch seconds
          in: query
          required: true
        - name: spss
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfo'
      responses:
        200:
          description: A list of traces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempoV1Response'
  /api/v2/traces/{traceId}:
    post:
      summary: Get a trace details by id
      operationId: queryTrace
      parameters:
        - name: traceId
          schema:
            type: string
          in: path
        - name: start
          schema:
            type: integer # unix epoch seconds
          in: query
        - name: end
          schema:
            type: integer # unix epoch seconds
          in: query
        - name: depth
          description: |
            The depth of the query.
            If not provided, the default depth will be used.
          schema:
            type: integer
          in: query
        - name: childrenLimit
          description: |
            The maximum number of children to fetch on each level.
          schema:
            type: integer
          in: query
        - name: spanId
          description: |
            The parent span id to start the query from.
            If not provided, the root span will be used.
          schema:
            type: string
          in: query
        - name: skip
          description: |
            The number of spans to skip.
            Should only be used in combination with spanId.
          schema:
            type: integer
          in: query
        - name: take
          description: |
            The number of spans to take.
            Should only be used in combination with spanId.
          schema:
            type: integer
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfo'
      responses:
        200:
          description: A list of spans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TracesData'

components:
  schemas:
    DataSourceInfo:
      type: object
      description: |
        Information about the datasource to use for the search.
        This has the OpenSearch specific fields to connect to the datasource.
        It will later have the exactly Tempo API information.
      properties:
        url:
          type: string
        database:
          type: string
        timeField:
          type: string
        type:
          type: string
      required:
        - type
        - url
        - database
    AnyValue:
      type: object
      properties:
        stringValue:
          type: string
          nullable: true
        boolValue:
          type: boolean
        intValue:
          type: integer
          format: int64
        doubleValue:
          type: number
          format: double
        arrayValue:
          $ref: '#/components/schemas/ArrayValue'
        kvlistValue:
          $ref: '#/components/schemas/KeyValueList'
        bytesValue:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        valueCase:
          $ref: '#/components/schemas/ValueOneofCase'
      additionalProperties: false
    ArrayValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/AnyValue'
          nullable: true
          readOnly: true
      additionalProperties: false
    EntityRef:
      type: object
      properties:
        schemaUrl:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        idKeys:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
        descriptionKeys:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    Event:
      type: object
      properties:
        timeUnixNano:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
        droppedAttributesCount:
          type: integer
          format: int32
      additionalProperties: false
    InstrumentationScope:
      type: object
      properties:
        name:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
        droppedAttributesCount:
          type: integer
          format: int32
      additionalProperties: false
    KeyValue:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          $ref: '#/components/schemas/AnyValue'
      additionalProperties: false
    KeyValueList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
      additionalProperties: false
    Link:
      type: object
      properties:
        traceId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        spanId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        traceState:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
        droppedAttributesCount:
          type: integer
          format: int32
        flags:
          type: integer
          format: int32
      additionalProperties: false
    Resource:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
        droppedAttributesCount:
          type: integer
          format: int32
        entityRefs:
          type: array
          items:
            $ref: '#/components/schemas/EntityRef'
          nullable: true
          readOnly: true
      additionalProperties: false
    ResourceSpans:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
        scopeSpans:
          type: array
          items:
            $ref: '#/components/schemas/ScopeSpans'
          nullable: true
          readOnly: true
        schemaUrl:
          type: string
          nullable: true
      additionalProperties: false
    ScopeSpans:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/InstrumentationScope'
        spans:
          type: array
          items:
            $ref: '#/components/schemas/Span'
          nullable: true
          readOnly: true
        schemaUrl:
          type: string
          nullable: true
      additionalProperties: false
    Span:
      type: object
      properties:
        traceId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        spanID:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        traceState:
          type: string
          nullable: true
        parentSpanId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        flags:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        kind:
          $ref: '#/components/schemas/SpanKind'
        startTimeUnixNano:
          type: integer
          format: int64
        endTimeUnixNano:
          type: integer
          format: int64
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
          nullable: true
          readOnly: true
        droppedAttributesCount:
          type: integer
          format: int32
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          nullable: true
          readOnly: true
        droppedEventsCount:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          readOnly: true
        droppedLinksCount:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    SpanKind:
      enum:
        - unspecified
        - internal
        - server
        - client
        - producer
        - consumer
      type: string
    SpanSet:
      type: object
      properties:
        spans:
          type: array
          items:
            $ref: '#/components/schemas/Span'
          nullable: true
        matched:
          type: integer
          format: int32
      additionalProperties: false
    Status:
      type: object
      properties:
        message:
          type: string
          nullable: true
        code:
          $ref: '#/components/schemas/StatusCode'
      additionalProperties: false
    StatusCode:
      enum:
        - unset
        - ok
        - error
      type: string
    TagScope:
      enum:
        - all
        - resource
        - span
        - intrinsic
      type: string
    TagValue:
      type: object
      properties:
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    TempoMetrics:
      type: object
      properties:
        inspectedTraces:
          type: integer
          format: int32
          nullable: true
        inspectedBytes:
          type: integer
          format: int32
          nullable: true
        totalBlocks:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TempoScope:
      type: object
      properties:
        name:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TempoTrace:
      type: object
      properties:
        traceID:
          type: string
          nullable: true
        rootServiceName:
          type: string
          nullable: true
        rootTraceName:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        duration:
          type: string
          format: date-span
        spanSets:
          type: array
          items:
            $ref: '#/components/schemas/SpanSet'
          nullable: true
      additionalProperties: false
    TempoV1Response:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/TempoMetrics'
        traces:
          type: array
          items:
            $ref: '#/components/schemas/TempoTrace'
          nullable: true
        tagNames:
          type: array
          items:
            type: string
          nullable: true
        tagValues:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TempoV2Response:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/TempoMetrics'
        traces:
          type: array
          items:
            $ref: '#/components/schemas/TempoTrace'
          nullable: true
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/TempoScope'
          nullable: true
        tagValues:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
          nullable: true
      additionalProperties: false
    TracesData:
      type: object
      properties:
        resourceSpans:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSpans'
          nullable: true
          readOnly: true
      additionalProperties: false
    ValueOneofCase:
      enum:
        - none
        - stringValue
        - boolValue
        - intValue
        - doubleValue
        - arrayValue
        - kvlistValue
        - bytesValue
      type: string
